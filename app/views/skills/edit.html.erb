<h1>スキルチェックedit</h1>
<% @skill.each do |s|%>
<%= s.id%>
<% end %>
<div>
  <div id="backend">
    <%= link_to "スキルを追加する", new_skill_url %>
    <p id="backend_title">バックエンド</p>
  </div>
</div>

<%# ココが新規postになってしまっているのでupdateメソッドに飛ばすようにする %>
<% @skill.each do |s|%>
  <% @s = s%>
  <%= form_with model: @s, local: true do |f| %>
    <%= s.skill_name %>
    <%= f.hidden_field :id, :value => s.id %> 
    <%= f.select :skill_level, [["10", "10"], ["20", "20"], ["30", "30"], ["40", "40"],
    ["50", "50"], ["60", "60"], ["70", "70"], ["80", "80"],["90", "90"], ["100", "100"]],include_blank: "#{s.skill_level}" %>
    <%= f.submit '更新'%>
  <% end %>
<% end %>

<%
=begin
%>
  <div id="backend">
    <%= link_to "スキルを追加する", skills_new_url %>
    <p id="backend_title">バックエンド</p>
  </div>
  ⇧部分のリンク先を(バックエンド)、(フロントエンド),(インフラ)と3つ用意する。
  飛んだリンク先からのformに非表示でidを振り分けて(バックエンド)、(フロントエンド),(インフラ)と内部で仕分けてgetリクエストで表示させる場所を仕分ける

  それに伴い, 1. skillsテーブルのカラムに "skill_type"テーブルを追加する(バックエンド:1,フロントエンド:2,インフラ:3)などで仕分ける
            2. 対応のViewを作る

               隠しフィールド<%= f.hidden_field skill_type:, value: @post.id %>
<%
=end


%>
